import os
import assemblyai as aai
import subprocess
import shutil
import traceback
from dotenv import load_dotenv

# T·∫£i bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
load_dotenv()

# Thi·∫øt l·∫≠p API key t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
aai.settings.api_key = os.getenv("ASSEMBLYAI_API_KEY")
if not aai.settings.api_key:
    raise ValueError("‚ö†Ô∏è ASSEMBLYAI_API_KEY kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y trong file .env")

transcriber = aai.Transcriber()

# ƒê∆∞·ªùng d·∫´n th∆∞ m·ª•c v√† font
input_folder = "videos_input"
output_folder = "videos_output"
font_path = "Arial\\ARIALBD.TTF"  # ƒê·∫£m b·∫£o ƒë√¢y l√† ƒë∆∞·ªùng d·∫´n t·ªõi font Arial Bold
font_dir = os.path.dirname(font_path)  # ƒê∆∞·ªùng d·∫´n th∆∞ m·ª•c ch·ª©a font

# File t·∫°m
temp_video_path = f"{input_folder}/__running_video.mp4"
temp_audio_path = f"{input_folder}/__running_audio.mp3"
temp_srt_path = f"{input_folder}/__running_subs.srt"

# T·∫°o th∆∞ m·ª•c output n·∫øu ch∆∞a c√≥
os.makedirs(output_folder, exist_ok=True)

for filename in os.listdir(input_folder):
    if filename.lower().endswith(('.mp4', '.mov', '.mkv', '.avi')):
        input_path = os.path.join(input_folder, filename)
        base_name = os.path.splitext(filename)[0]
        output_path = os.path.join(output_folder, filename)
        srt_output_path = os.path.join(input_folder, f"{base_name}.srt")

        if os.path.exists(output_path):
            print(f"‚è≠Ô∏è B·ªè qua (ƒë√£ x·ª≠ l√Ω): {filename}")
            continue

        try:
            print(f"\nüîÑ ƒêang x·ª≠ l√Ω: {filename}")

            # Sao ch√©p video v√†o file t·∫°m ƒë·ªÉ tr√°nh l·ªói k√Ω t·ª± ƒë·∫∑c bi·ªát
            shutil.copy(input_path, temp_video_path)

            # Tr√≠ch xu·∫•t √¢m thanh
            subprocess.run(
                f'ffmpeg -y -i "{temp_video_path}" -q:a 0 -map a "{temp_audio_path}"',
                shell=True,
                check=True
            )

            # G·ª≠i t·ªõi AssemblyAI ƒë·ªÉ t·∫°o ph·ª• ƒë·ªÅ
            transcript = transcriber.transcribe(temp_audio_path)

            # L∆∞u file ph·ª• ƒë·ªÅ
            with open(temp_srt_path, "w", encoding="utf-8") as f:
                f.write(transcript.export_subtitles_srt())

            shutil.copy(temp_srt_path, srt_output_path)

            # T·∫°o b·ªô l·ªçc ph·ª• ƒë·ªÅ v·ªõi n·ªÅn cho ch·ªØ (ch·ªâ n·ªÅn cho ch·ªØ, kh√¥ng l√†m n·ªÅn to√†n b·ªô video)
            subtitle_style = (
                f"subtitles='{temp_srt_path}':"
                f"fontsdir='{font_dir}':"
                f"force_style='FontName=Arial-Bold,FontSize=35,"  # S·ª≠ d·ª•ng font Arial Bold, ch·ªØ l·ªõn
                f"PrimaryColour=&H00FFFFFF,OutlineColour=&H00000000,Outline=3,BorderStyle=1,Shadow=0,"  # Ch·ªØ tr·∫Øng, vi·ªÅn ƒëen, kh√¥ng b√≥ng
                f"BackColour=&H80000000,BackOpacity=0.8,Box=1'"  # Ch·ªâ th√™m n·ªÅn cho ch·ªØ, kh√¥ng ph·∫£i to√†n b·ªô video
            )

            # G·∫Øn ph·ª• ƒë·ªÅ v√†o video
            subprocess.run(
                f'ffmpeg -y -i "{temp_video_path}" -vf "{subtitle_style}" -c:v libx264 -c:a aac "{output_path}"',
                shell=True,
                check=True
            )

            print(f"‚úÖ Ho√†n t·∫•t: {filename}")

        except Exception as e:
            traceback.print_exc()
            print(f"‚ùå L·ªói v·ªõi video {filename}: {e}")

        finally:
            # Xo√° file t·∫°m
            for path in [temp_video_path, temp_audio_path, temp_srt_path]:
                if os.path.exists(path):
                    os.remove(path)

print("üéâ Ho√†n t·∫•t to√†n b·ªô qu√° tr√¨nh!")
